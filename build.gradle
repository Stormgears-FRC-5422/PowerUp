import jaci.openrio.gradle.GradleRIOPlugin
import jaci.openrio.gradle.frc.FRCJavaArtifact
import jaci.openrio.gradle.frc.RoboRIO
import jaci.gradle.deploy.DeployContext

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16"
	}
}

plugins {
	id "java"
	id "eclipse"
	id "idea"
	id "org.jetbrains.kotlin.jvm" version "1.2.31"
	id "jaci.openrio.gradle.GradleRIO" version "2018.03.06"
}

apply plugin: 'org.jetbrains.dokka'

group 'org.stormgears.powerup'
version '1.0-SNAPSHOT'

def TEAM = 5422
def ROBOT_CLASS = "org.stormgears.powerup.Robot"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

wpi {
	ctreVersion = '5.3.1.0'
}

deploy {
	targets {
		target("roborio", RoboRIO) {
			team = TEAM
			addresses = ['10.54.22.2', 'roborio-5422-FRC.local']
		}
	}
	artifacts {
		artifact('frcJava', FRCJavaArtifact) {
			targets << "roborio"

			postdeploy << { DeployContext ctx ->
				ctx.put(file("fix-permissions.sh"), "fix-permissions.sh", cache)
				ctx.execute('chown admin /home/lvuser/fix-permissions.sh; chmod 777 /home/lvuser/fix-permissions.sh; chmod u+s /home/lvuser/fix-permissions.sh')
			}
		}
	}
}

dokka {
	outputFormat = 'gfm'
	jdkVersion = 8
	reportUndocumented = false

	includes = ['src/main/packages.md']

	linkMapping {
		dir = "src/main"
		url = "https://github.com/Stormgears-FRC-5422/PowerUp/blob/master/src/main"
		suffix = "#L"
	}

	externalDocumentationLink {
		url = new URL("https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/")
		packageListUrl = new URL("https://gist.github.com/as-com/4c1114e79015e4a5ec0fe14b15f17ebd/raw/0a7813ea02d9c04a01cf2998919d557e4a6c3291/package-list")
	}
}

dependencies {
	compile wpilib()
	compile navx()
	compile ctre()

	testCompile group: 'junit', name: 'junit', version: '4.12'
	testCompile 'org.powermock:powermock-module-junit4:1.7.3'
	testCompile 'org.powermock:powermock-api-mockito2:1.7.3'

	compile group: 'org.apache.commons', name: 'commons-text', version: '1.3'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	compile group: 'com.lmax', name: 'disruptor', version: '3.3.8'

	compile group: 'org.jetbrains', name: 'annotations', version: '15.0'

	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'
}

kotlin {
	experimental {
		coroutines 'enable'
	}
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

configurations {
	jar.archiveName = 'FRCUserProgram.jar'
}

jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	manifest GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

telemetry {
	reportTelemetry = false
}
properties['no-telemetry'] = true
